import { Metadata } from 'next'
import { generateServiceMetadata } from '@/lib/seo-config'
import { siteConfig } from '@/lib/seo-config'

// Define service data (reusing the data from the page component)
const services = {
  "ai-opportunity-assessment": {
    title: "AI Opportunity Assessment",
    description:
      "Structured analysis that clearly identifies high-value AI opportunities where automation and intelligence can deliver immediate ROI for specific operational workflows and business challenges.",
    benefits: [
      "Clear visibility into actionable, high-impact AI implementation opportunities.",
      "Confidence in technology investment decisions backed by evidence-based analysis.",
      "Prevention of wasted resources through early identification of realistic, relevant AI use-cases tailored to your operations.",
    ],
  },
  "ai-readiness-assessment": {
    title: "AI Readiness Assessment",
    description:
      "Comprehensive diagnostic process that evaluates a company's current capabilities, infrastructure, and business processes to determine optimal starting points for AI adoption.",
    benefits: [
      "Clearly prioritized AI opportunities mapped to specific business objectives with realistic implementation timelines.",
      "Detailed understanding of readiness gaps with actionable recommendations, ensuring successful AI implementations.",
      "Aligned leadership expectations and clear consensus on resource allocation and success metrics.",
    ],
  },
  "ai-implementation-roadmap": {
    title: "AI Implementation Roadmap",
    description:
    "Customized strategic implementation plan that prioritizes for maximum impact, feasibility, and organizational readiness.",
    benefits: [
      "Accelerated ROI through strategic sequencing of AI initiatives for rapid value creation.",
      "Reduced risks and enhanced implementation success by proactively identifying technical and organizational challenges.",
      "Enhanced budget efficiency by establishing clear decision criteria for technology investments.",
    ],
  },
  "ai-vendor-selection": {
    title: "AI Vendor Selection",
    description:
      "Structured evaluation of AI vendors against business-driven criteria to ensure strategic alignment and maximum value.",
    benefits: [
      "Confident vendor selection decisions through transparent, business-aligned evaluation criteria.",
      "Accelerated implementation through early identification of integration and operational requirements.",
      "Stronger negotiating position with vendors through detailed understanding of feature relevance.",
    ],
  },
  "phased-ai-pilot-execution": {
    title: "Phased AI Pilot Execution",
    description:
    "Controlled, measurable pilot projects to minimize risk, validate practical AI value, and establish a strong foundation for broader adoption.",
    benefits: [
      "Data-driven validation of AI investments through controlled pilot projects demonstrating clear operational improvements.",
      "Refined implementation strategies informed by real-world testing.",
      "Strong stakeholder buy-in and organizational confidence generated by visible, measurable pilot successes."
    ],
  },
  "ai-impact-assessment": {
    title: "Impact",
    description:
      "Ensure sustainable success of AI initiatives with structured ROI validation, comprehensive outcome reviews, and empowering knowledge transfer.",
    benefits: [
      "Clear confirmation of AI project outcomes through structured ROI and performance metric assessments.",
      "Empowered internal teams equipped with knowledge and tools for sustainable AI operation and continuous improvement.",
      "Strategically positioned to build upon demonstrated successes with clear pathways for future innovation.",
    ],
  },
}

// Dynamic metadata generation based on the slug
export async function generateMetadata({ params }: { params: { slug: string } }): Promise<Metadata> {
  const slug = params.slug;
  const service = services[slug as keyof typeof services];
  
  // If service not found, return default metadata
  if (!service) {
    return {
      title: "Service Not Found | futureproof",
      description: "The requested service could not be found.",
    };
  }
  
  // Generate service-specific metadata
  return generateServiceMetadata(service);
}

// Also generate static paths for all service pages
export function generateStaticParams() {
  return Object.keys(services).map(slug => ({ slug }));
}
